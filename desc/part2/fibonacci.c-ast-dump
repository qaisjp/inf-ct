Program(
  FunDecl(VOID,main
         ,Block(VarDecl(INT,n)
               ,VarDecl(INT,first)
               ,VarDecl(INT,second)
               ,VarDecl(INT,next)
               ,VarDecl(INT,c)
               ,VarDecl(CHAR,t)
               ,Assign(VarExpr(n),FunCallExpr(read_i))
               ,Assign(VarExpr(first),IntLiteral(0))
               ,Assign(VarExpr(second),IntLiteral(1))
               ,ExprStmt(FunCallExpr(print_s,TypecastExpr(PointerType(CHAR),StrLiteral(First ))))
               ,ExprStmt(FunCallExpr(print_i,VarExpr(n)))
               ,ExprStmt(FunCallExpr(print_s,TypecastExpr(PointerType(CHAR),StrLiteral( terms of Fibonacci series are : ))))
               ,Assign(VarExpr(c),IntLiteral(0))
               ,While(BinOp(VarExpr(c),LT,VarExpr(n))
                     ,Block(If(BinOp(VarExpr(c),LE,IntLiteral(1))
                              ,Assign(VarExpr(next),VarExpr(c))
                              ,Block(Assign(VarExpr(next),BinOp(VarExpr(first),ADD,VarExpr(second)))
                                    ,Assign(VarExpr(first),VarExpr(second)),Assign(VarExpr(second),VarExpr(next))
                                    )
                              )
                           ,ExprStmt(FunCallExpr(print_i,VarExpr(next)))
                           ,ExprStmt(FunCallExpr(print_s,TypecastExpr(PointerType(CHAR),StrLiteral( ))))
                           ,Assign(VarExpr(c),BinOp(VarExpr(c),ADD,IntLiteral(1)))
                           )
                     )
               )
         )
       )